<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gm.mapper.EquipmentMapper">
  <resultMap id="BaseResultMap" type="com.gm.pojo.Equipment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date" jdbcType="BIGINT" property="date" />
    <result column="geology" jdbcType="INTEGER" property="geology" />
    <result column="model" jdbcType="INTEGER" property="model" />
    <result column="running_time" jdbcType="INTEGER" property="runningTime" />
    <result column="tunneling distance" jdbcType="INTEGER" property="tunnelingDistance" />
    <result column="planned _distance" jdbcType="INTEGER" property="plannedDistance" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `date`, geology, model, running_time, `tunneling distance`, `planned _distance`
  </sql>
  <select id="selectByExample" parameterType="com.gm.pojo.EquipmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from equipment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from equipment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gm.pojo.EquipmentExample">
    delete from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gm.pojo.Equipment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into equipment (`date`, geology, model, 
      running_time, `tunneling distance`, `planned _distance`
      )
    values (#{date,jdbcType=BIGINT}, #{geology,jdbcType=INTEGER}, #{model,jdbcType=INTEGER}, 
      #{runningTime,jdbcType=INTEGER}, #{tunnelingDistance,jdbcType=INTEGER}, #{plannedDistance,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gm.pojo.Equipment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into equipment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="date != null">
        `date`,
      </if>
      <if test="geology != null">
        geology,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="runningTime != null">
        running_time,
      </if>
      <if test="tunnelingDistance != null">
        `tunneling distance`,
      </if>
      <if test="plannedDistance != null">
        `planned _distance`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="date != null">
        #{date,jdbcType=BIGINT},
      </if>
      <if test="geology != null">
        #{geology,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        #{model,jdbcType=INTEGER},
      </if>
      <if test="runningTime != null">
        #{runningTime,jdbcType=INTEGER},
      </if>
      <if test="tunnelingDistance != null">
        #{tunnelingDistance,jdbcType=INTEGER},
      </if>
      <if test="plannedDistance != null">
        #{plannedDistance,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gm.pojo.EquipmentExample" resultType="java.lang.Long">
    select count(*) from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update equipment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=BIGINT},
      </if>
      <if test="record.geology != null">
        geology = #{record.geology,jdbcType=INTEGER},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=INTEGER},
      </if>
      <if test="record.runningTime != null">
        running_time = #{record.runningTime,jdbcType=INTEGER},
      </if>
      <if test="record.tunnelingDistance != null">
        `tunneling distance` = #{record.tunnelingDistance,jdbcType=INTEGER},
      </if>
      <if test="record.plannedDistance != null">
        `planned _distance` = #{record.plannedDistance,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update equipment
    set id = #{record.id,jdbcType=BIGINT},
      `date` = #{record.date,jdbcType=BIGINT},
      geology = #{record.geology,jdbcType=INTEGER},
      model = #{record.model,jdbcType=INTEGER},
      running_time = #{record.runningTime,jdbcType=INTEGER},
      `tunneling distance` = #{record.tunnelingDistance,jdbcType=INTEGER},
      `planned _distance` = #{record.plannedDistance,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gm.pojo.Equipment">
    update equipment
    <set>
      <if test="date != null">
        `date` = #{date,jdbcType=BIGINT},
      </if>
      <if test="geology != null">
        geology = #{geology,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=INTEGER},
      </if>
      <if test="runningTime != null">
        running_time = #{runningTime,jdbcType=INTEGER},
      </if>
      <if test="tunnelingDistance != null">
        `tunneling distance` = #{tunnelingDistance,jdbcType=INTEGER},
      </if>
      <if test="plannedDistance != null">
        `planned _distance` = #{plannedDistance,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gm.pojo.Equipment">
    update equipment
    set `date` = #{date,jdbcType=BIGINT},
      geology = #{geology,jdbcType=INTEGER},
      model = #{model,jdbcType=INTEGER},
      running_time = #{runningTime,jdbcType=INTEGER},
      `tunneling distance` = #{tunnelingDistance,jdbcType=INTEGER},
      `planned _distance` = #{plannedDistance,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>